---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile

---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
type: Opaque

---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-csrf
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
type: Opaque
data:
  csrf: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-key-holder
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
type: Opaque

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
    verbs: ["get", "update", "delete"]
  # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kubernetes-dashboard-settings"]
    verbs: ["get", "update"]
  # Allow Dashboard to get metrics.
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["heapster", "dashboard-metrics-scraper"]
    verbs: ["proxy"]
  - apiGroups: [""]
    resources: ["services/proxy"]
    resourceNames: ["heapster", "http:heapster:", "https:heapster:", "dashboard-metrics-scraper", "http:dashboard-metrics-scraper"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: EnsureExists
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
roleRef:
  kind: Role
  name: kubernetes-dashboard
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  # Allow Metrics Scraper to get metrics from the Metrics server
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: EnsureExists
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
roleRef:
  kind: ClusterRole
  name: kubernetes-dashboard
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-dashboard
      app.kubernetes.io/part-of: kubernetes-dashboard
      addonmanager.kubernetes.io/mode: Reconcile
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-dashboard
        app.kubernetes.io/part-of: kubernetes-dashboard
        addonmanager.kubernetes.io/mode: Reconcile
    spec:
      containers:
        - name: kubernetes-dashboard
          image: {{ dashboard_image_repository }}/dashboard:{{ dashboard_version }}
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --auto-generate-certificates
            - --namespace=kubernetes-dashboard
            # Uncomment the following line to manually specify Kubernetes API server Host
            # If not specified, Dashboard will attempt to auto discover the API server and connect
            # to it. Uncomment only if the default does not work.
            # - --apiserver-host=http://my-address:port
          volumeMounts:
            - name: kubernetes-dashboard-certs
              mountPath: /certs
            # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
      volumes:
        - name: kubernetes-dashboard-certs
          secret:
            secretName: kubernetes-dashboard-certs
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule

---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  type: {{ dashboard_service_type }}
{% if dashboard_service_type == 'ExternalName' %}
  externalName: {{ dashboard_external_name }}
{% endif %}
{% if dashboard_external_traffic_policy %}
  externalTrafficPolicy: {{ dashboard_external_traffic_policy }}
{% endif %}
  selector:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
  ports:
    - name: https
      port: 443
      targetPort: 8443
{% if dashboard_service_type == 'ClusterIP' %}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubernetes-dashboard-proxy
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard-proxy
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-dashboard-proxy
      app.kubernetes.io/part-of: kubernetes-dashboard
      addonmanager.kubernetes.io/mode: Reconcile
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-dashboard-proxy
        app.kubernetes.io/part-of: kubernetes-dashboard
        addonmanager.kubernetes.io/mode: Reconcile
    spec:
      containers:
        - name: https
          image: {{ socat_image_repository }}/socat:{{ socat_version }}
          args:
            - tcp-listen:8443,fork,reuseaddr
            - tcp:kubernetes-dashboard:443
          ports:
            - name: https
              containerPort: 8443
              hostPort: 8443
{% endif %}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
      addonmanager.kubernetes.io/mode: Reconcile
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dashboard-metrics-scraper
        app.kubernetes.io/part-of: kubernetes-dashboard
        addonmanager.kubernetes.io/mode: Reconcile
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image: {{ dashboard_metrics_scraper_image_repository }}/metrics-scraper:{{ dashboard_metrics_scraper_version }}
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      serviceAccountName: kubernetes-dashboard
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: tmp-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  type: {{ dashboard_metrics_scraper_service_type }}
{% if dashboard_metrics_scraper_service_type == 'ExternalName' %}
  externalName: {{ dashboard_metrics_scraper_external_name }}
{% endif %}
{% if dashboard_metrics_scraper_external_traffic_policy %}
  externalTrafficPolicy: {{ dashboard_metrics_scraper_external_traffic_policy }}
{% endif %}
  selector:
    app.kubernetes.io/name: dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
  ports:
    - name: metrics
      port: 8000
      targetPort: 8000
{% if dashboard_metrics_scraper_service_type == 'ClusterIP' %}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dashboard-metrics-scraper-proxy
  namespace: kubernetes-dashboard
  labels:
    app.kubernetes.io/name: dashboard-metrics-scraper-proxy
    app.kubernetes.io/part-of: kubernetes-dashboard
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard-metrics-scraper-proxy
      app.kubernetes.io/part-of: kubernetes-dashboard
      addonmanager.kubernetes.io/mode: Reconcile
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dashboard-metrics-scraper-proxy
        app.kubernetes.io/part-of: kubernetes-dashboard
        addonmanager.kubernetes.io/mode: Reconcile
    spec:
      containers:
        - name: metrics
          image: {{ socat_image_repository }}/socat:{{ socat_version }}
          args:
            - tcp-listen:8000,fork,reuseaddr
            - tcp:dashboard-metrics-scraper:8000
          ports:
            - name: metrics
              containerPort: 8000
              hostPort: 8000
{% endif %}
